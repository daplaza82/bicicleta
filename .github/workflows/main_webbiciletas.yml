name: Build and deploy Python app to Azure Web App - webbiciletas

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python version
        uses: actions/setup-python@v1
        with:
          python-version: '3.8'

      - name: Create and start virtual environment
        run: |
          python -m venv venv
          source venv/bin/activate
      
      - name: Install dependencies
        run: pip install -r requirements.txt
        
      # Optional: Add step to run tests here (PyTest, Django test suites, etc.)
      
      - name: Zip artifact for deployment
        run: zip release.zip ./* -r

      - name: Upload artifact for deployment jobs
        uses: actions/upload-artifact@v3
        with:
          name: python-app
          path: |
            release.zip
            !venv/

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    permissions:  # Agrega esta sección aquí
      id-token: write
      contents: read

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: python-app

      - name: Unzip artifact for deployment
        run: unzip release.zip
      
      - name: Login to Azure
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_B8D7F4D40D82461F84BAEC7613767D13 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_877C143D481642018496D3ADC6F58CA8 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_952158A2C2624CB68F9F00746B0D1FD7 }}

      - name: 'Deploy to Azure Web App'
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'webbiciletas'
          slot-name: 'Production'

      - name: Configure and start web app
        run: |
          echo "Configurando la aplicación web..."
          # Asegúrate de que Gunicorn esté instalado
          pip install gunicorn
          
          # Crear un archivo de inicio para Azure
          echo "gunicorn --bind=0.0.0.0 --timeout 600 app:app" > startup.txt
          
          # Configurar las variables de entorno necesarias (si las hay)
          # az webapp config appsettings set --name webbiciletas --resource-group <tu-grupo-de-recursos> --settings FLASK_APP=app.py
          
          echo "Aplicación web configurada y lista para iniciar."
